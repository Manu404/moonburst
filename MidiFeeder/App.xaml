<Application x:Class="MoonBurst.App" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:local="clr-namespace:MoonBurst" StartupUri="Views/MainWindow.xaml" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             d1p1:Ignorable="d" 
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:core="clr-namespace:MoonBurst.Core" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             xmlns:model="clr-namespace:MoonBurst.Model">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/basedark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Card.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Flipper.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Popupbox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.expander.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/materialdesigncolor.deeppurple.named.primary.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/materialdesigncolor.blue.named.primary.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/materialdesigncolor.green.named.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/materialdesigncolor.red.named.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/materialdesigncolor.lightblue.named.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/materialdesigncolor.grey.named.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource 'Deep PurplePrimary200'}"/>
            <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource  'Deep PurplePrimary200Foreground'}"/>
            <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource  'Deep PurplePrimary200'}"/>
            <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource  'Deep PurplePrimary200Foreground'}"/>
            <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource  'Deep PurplePrimary200'}"/>
            <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource 'Deep PurplePrimary200Foreground'}"/>

            <SolidColorBrush x:Key="SecondaryHueLightBrush" Color="{StaticResource 'BluePrimary200'}"/>
            <SolidColorBrush x:Key="SecondaryHueLightForegroundBrush" Color="{StaticResource  'BluePrimary200Foreground'}"/>
            <SolidColorBrush x:Key="SecondaryHueMidBrush" Color="{StaticResource  'BluePrimary500'}"/>
            <SolidColorBrush x:Key="SecondaryHueMidForegroundBrush" Color="{StaticResource  'BluePrimary500Foreground'}"/>
            <SolidColorBrush x:Key="SecondaryHueDarkBrush" Color="{StaticResource  'BluePrimary700'}"/>
            <SolidColorBrush x:Key="SecondaryHueDarkForegroundBrush" Color="{StaticResource 'BluePrimary700Foreground'}"/>

            <SolidColorBrush x:Key="HighlightBrush" Color="{DynamicResource 'BluePrimary700'}"/>
            <SolidColorBrush x:Key="AccentBaseColorBrush" Color="{DynamicResource 'Deep PurplePrimary200'}" />
            <SolidColorBrush x:Key="AccentColorBrush" Color="{DynamicResource 'Deep PurplePrimary200'}"/>
            <SolidColorBrush x:Key="AccentColorBrush2" Color="{DynamicResource 'Deep PurplePrimary400'}"/>
            <SolidColorBrush x:Key="AccentColorBrush3" Color="{DynamicResource 'Deep PurplePrimary300'}"/>
            <SolidColorBrush x:Key="AccentColorBrush4" Color="{DynamicResource 'Deep PurplePrimary200'}"/>
            <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{DynamicResource 'GreyPrimary900'}"/>
            <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="{DynamicResource 'BluePrimary900Foreground'}"/>
            <LinearGradientBrush x:Key="ProgressBrush" EndPoint="0.001,0.5" StartPoint="1.002,0.5">
                <GradientStop Color="{DynamicResource 'Deep PurplePrimary700'}" Offset="0"/>
                <GradientStop Color="{DynamicResource 'Deep PurplePrimary300'}" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="CheckmarkFill" Color="{DynamicResource 'Deep PurplePrimary500'}"/>
            <SolidColorBrush x:Key="RightArrowFill" Color="{DynamicResource 'Deep PurplePrimary500'}"/>
            <SolidColorBrush x:Key="IdealForegroundColorBrush" Color="{DynamicResource 'Deep PurplePrimary500Foreground'}"/>
            <SolidColorBrush x:Key="IdealForegroundDisabledBrush" Color="{DynamicResource 'Deep PurplePrimary500'}" Opacity="0.4"/>
            <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.OnSwitchBrush.Win10" Color="{DynamicResource 'Deep PurplePrimary500'}" />
            <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.OnSwitchMouseOverBrush.Win10" Color="{DynamicResource 'Deep PurplePrimary400'}" />
            <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.ThumbIndicatorCheckedBrush.Win10" Color="{DynamicResource 'Deep PurplePrimary500'}" />

            <core:InverseBooleanConverter x:Key="InverseBooleanConverter" />

            <ObjectDataProvider x:Key="MidiChannelCommandValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="model:ChannelCommand"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="FootTriggerValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="model:FootTrigger"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <Style x:Key="MaterialDesignSwitchToggleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="local:ToggleButtonAssist.SwitchTrackOnBackground" Value="{DynamicResource PrimaryHueLightBrush}"/>
                <Setter Property="local:ToggleButtonAssist.SwitchTrackOffBackground" Value="Black"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="0 1 0 0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <ControlTemplate.Resources>
                                <SineEase x:Key="RippleEasingFunction" EasingMode="EaseInOut"/>
                                <Storyboard x:Key="ShowRipple">
                                    <DoubleAnimation Storyboard.TargetName="RippleThumb" Storyboard.TargetProperty="Opacity"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             To="0.26" Duration="0"/>
                                    <DoubleAnimation Storyboard.TargetName="RippleThumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             From="1" To="2.5" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="RippleThumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             From="1" To="2.5" Duration="0:0:0.2"/>
                                </Storyboard>
                                <Storyboard x:Key="HideRipple">
                                    <DoubleAnimation Storyboard.TargetName="RippleThumb" Storyboard.TargetProperty="Opacity"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             To="0" Duration="0:0:0.3"/>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Viewbox Width="34">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="*" To="Checked">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="23.5">
                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                <QuadraticEase EasingMode="EaseOut"/>
                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                        </EasingDoubleKeyFrame>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition From="Checked" To="Unchecked">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="23.5"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                <QuadraticEase EasingMode="EaseOut"/>
                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                        </EasingDoubleKeyFrame>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder"
                                                         Duration="0" To="23.5" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder"
                                                         Duration="0" To="0" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid>
                                    <Rectangle x:Name="Track" 
                                       Fill= "{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ToggleButtonAssist.SwitchTrackOffBackground)}" 
                                       Opacity="0.26"
                                       HorizontalAlignment="Left" 
                                       Height="15" 
                                       Margin="4.211,5,4.211,0" 
                                       Stroke="{x:Null}" 
                                       VerticalAlignment="Top" 
                                       Width="40" 
                                       RadiusY="7.5" 
                                       RadiusX="7.5"/>
                                    <Grid x:Name="ThumbHolder"
                                  HorizontalAlignment="Left" VerticalAlignment="Top">
                                        <Ellipse x:Name="RippleThumb"
                                         Fill="{DynamicResource PrimaryHueLightBrush}"
                                         Height="25" Width="25"
                                         IsHitTestVisible="False"
                                         Opacity="0.26"
                                         Margin="0"
                                         HorizontalAlignment="Center" VerticalAlignment="Center"
                                         RenderTransformOrigin="0.5,0.5">
                                            <Ellipse.RenderTransform>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                                            <Ellipse x:Name="Thumb"
                                             Fill="#FFFAFAFA" Stroke="{x:Null}" 
                                             HorizontalAlignment="Center" VerticalAlignment="Center"
                                             Width="25" Height="25"
                                             Margin="0,0,0,0"
                                             RenderTransformOrigin="0.5,0.5"
                                             Effect="{DynamicResource MaterialDesignShadowDepth1}">
                                            </Ellipse>
                                        </AdornerDecorator>
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                                                  Margin="{TemplateBinding Padding}"
                                                  x:Name="ContentPresenter"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  FlowDirection="LeftToRight"/>
                                        <Grid.RenderTransform>
                                            <TranslateTransform X="0" Y="0"/>
                                        </Grid.RenderTransform>
                                    </Grid>
                                </Grid>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Thumb" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                                    <Setter TargetName="Track" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ToggleButtonAssist.SwitchTrackOnBackground)}" />
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="True" />
                                        <Condition Property="local:ToggleButtonAssist.HasOnContent" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ToggleButtonAssist.OnContent)}" />
                                    <Setter TargetName="ContentPresenter" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ToggleButtonAssist.OnContentTemplate)}" />
                                </MultiTrigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                    <!-- Need to set Foreground to Background here instead of hardcoded PrimaryHueMidBrush -->
                                </Trigger>
                                <Trigger Property="Button.IsDefaulted" Value="true"/>
                                <Trigger Property="IsMouseOver" Value="true"/>
                                <Trigger Property="IsPressed" Value="true">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource ShowRipple}"/>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource HideRipple}"/>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Thumb" Property="Fill" Value="#BDBDBD" />
                                    <Setter TargetName="Track" Property="Fill">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Black" Opacity=".12" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style  x:Key="ChannelMaterialExpanderHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ExpanderAssist.RightHeaderPadding)}" BorderThickness="3,0,0,0">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                                <Setter Property="BorderBrush">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{StaticResource RedAccent100}"></SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                                <Setter Property="BorderBrush">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{StaticResource GreenAccent200}"></SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <ToggleButton Grid.Row="0"
                                                          HorizontalAlignment="Center"
                                                          Foreground="{TemplateBinding Foreground}"
                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                          Style="{StaticResource MaterialDesignExpanderToggleButton}"
                                                          RenderTransformOrigin="0.5,0.5">
                                        <ToggleButton.RenderTransform>
                                            <RotateTransform Angle="-90"/>
                                        </ToggleButton.RenderTransform>
                                    </ToggleButton>
                                    <ContentPresenter Grid.Row="1"
                                                              HorizontalAlignment="Center"
                                                              Margin="0,16,0,0"
                                                              Content="{TemplateBinding Content}"
                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                              VerticalAlignment="Stretch" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ActionMaterialExpanderHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="{TemplateBinding Background}" BorderThickness="3,0,0,0" 
                                    Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ExpanderAssist.DownHeaderPadding)}">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                                <Setter Property="BorderBrush">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{StaticResource RedAccent100}"></SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                                <Setter Property="BorderBrush">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{StaticResource GreenAccent200}"></SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              VerticalAlignment="Stretch"
                                              Margin="0,0,16,0" />
                                    <ToggleButton Grid.Column="1"
                                          VerticalAlignment="Center"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource MaterialDesignExpanderToggleButton}"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MenuMaterialExpanderHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="{TemplateBinding Background}" Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ExpanderAssist.LeftHeaderPadding)}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <ToggleButton Grid.Row="0"
                                                  HorizontalAlignment="Center"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Style="{StaticResource MaterialDesignExpanderToggleButton}"
                                                  RenderTransformOrigin="0.5,0.5">
                                        <ToggleButton.RenderTransform>
                                            <RotateTransform Angle="90"/>
                                        </ToggleButton.RenderTransform>
                                    </ToggleButton>
                                    <ContentPresenter Grid.Row="1"
                                                      HorizontalAlignment="Center"
                                                      Margin="0,16,0,0"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      VerticalAlignment="Stretch" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ActionEditorExpander" TargetType="{x:Type Expander}" BasedOn="{StaticResource MaterialDesignExpander}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ExpansionStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" To="Expanded">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0:0:0.3"/>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition GeneratedDuration="0" To="Collapsed">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Hidden}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0:0:0.3"/>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Expanded">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Collapsed">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <DockPanel Background="{TemplateBinding Background}">
                                    <ToggleButton Name="HeaderSite"
                                          Focusable="False"
                                          IsTabStop="False"
                                          DockPanel.Dock="Top"
                                          BorderThickness="0" Cursor="Hand"
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource MaterialDesignExpanderDownHeaderStyle}"
                                          TextElement.FontSize="15"
                                          Opacity=".87"
                                          Foreground="{TemplateBinding Foreground}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"/>
                                    <Border Name="ContentSite" BorderThickness="3,0,0,0">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                                        <Setter Property="BorderBrush">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="{StaticResource RedAccent100}"></SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                                        <Setter Property="BorderBrush">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="{StaticResource GreenAccent200}"></SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Grid Name="ContentPanel"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <ContentPresenter Name="PART_Content" Focusable="False" Opacity="0"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                        </Grid>
                                    </Border>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ExpandDirection" Value="Down">
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Top"/>
                                    <Setter Property="LayoutTransform" TargetName="ContentPanel">
                                        <Setter.Value>
                                            <ScaleTransform CenterX="0.5" CenterY="0" 
                                                    ScaleY="{Binding Opacity, ElementName=PART_Content}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" TargetName="ContentPanel" Value="Auto"/>
                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ActionMaterialExpanderHeaderStyle}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ChannelExpander" TargetType="{x:Type Expander}" BasedOn="{StaticResource MaterialDesignExpander}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ExpansionStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" To="Expanded">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0:0:0.3"/>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition GeneratedDuration="0" To="Collapsed">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Hidden}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0:0:0.3"/>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Expanded">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Collapsed">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <DockPanel Background="{TemplateBinding Background}">
                                    <ToggleButton Name="HeaderSite"
                                          Focusable="False"
                                          IsTabStop="False"
                                          DockPanel.Dock="Top"
                                          BorderThickness="0" Cursor="Hand"
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource MaterialDesignExpanderDownHeaderStyle}"
                                          TextElement.FontSize="15"
                                          Opacity=".87"
                                          Foreground="{TemplateBinding Foreground}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"/>
                                    <Border Name="ContentSite">
                                        <Grid Name="ContentPanel"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <ContentPresenter Name="PART_Content" Focusable="False" Opacity="0"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                        </Grid>
                                    </Border>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ExpandDirection" Value="Right">
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                    <Setter Property="LayoutTransform" TargetName="ContentPanel">
                                        <Setter.Value>
                                            <ScaleTransform CenterX="1" CenterY="0.5" ScaleX="{Binding Opacity, ElementName=PART_Content}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Height" TargetName="ContentPanel" Value="Auto"/>
                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ChannelMaterialExpanderHeaderStyle}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MenuMaterialDesignExpander" TargetType="{x:Type Expander}" BasedOn="{StaticResource MaterialDesignExpander}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ExpansionStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" To="Expanded">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0:0:0.3"/>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition GeneratedDuration="0" To="Collapsed">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Hidden}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0:0:0.3"/>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Expanded">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Collapsed">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <DockPanel Background="{TemplateBinding Background}">
                                    <ToggleButton Name="HeaderSite"
                                          Focusable="False"
                                          IsTabStop="False"
                                          DockPanel.Dock="Top"
                                          BorderThickness="0" Cursor="Hand"
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource MaterialDesignExpanderDownHeaderStyle}"
                                          TextElement.FontSize="15"
                                          Opacity=".87"
                                          Foreground="{TemplateBinding Foreground}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"/>
                                    <Border Name="ContentSite">
                                        <Grid Name="ContentPanel"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <ContentPresenter Name="PART_Content" Focusable="False" Opacity="0"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                        </Grid>
                                    </Border>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ExpandDirection" Value="Left">
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                    <Setter Property="LayoutTransform" TargetName="ContentPanel">
                                        <Setter.Value>
                                            <ScaleTransform CenterX="0" CenterY="0.5" 
                                                            ScaleX="{Binding Opacity, ElementName=PART_Content}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Height" TargetName="ContentPanel" Value="Auto"/>
                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource MenuMaterialExpanderHeaderStyle}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
    
    