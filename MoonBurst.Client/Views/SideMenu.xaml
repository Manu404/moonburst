<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:viewModel="clr-namespace:MoonBurst.ViewModel">

    <Style x:Key="MenuMaterialLeftExpanderHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ExpanderAssist.LeftHeaderPadding)}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ToggleButton Grid.Row="0"
                                                  HorizontalAlignment="Center"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Style="{StaticResource MaterialDesignExpanderToggleButton}"
                                                  RenderTransformOrigin="0.5,0.5">
                                <ToggleButton.RenderTransform>
                                    <RotateTransform Angle="90"/>
                                </ToggleButton.RenderTransform>
                            </ToggleButton>
                            <ContentPresenter Grid.Row="1"
                                              HorizontalAlignment="Center"
                                              Margin="0,10,0,0"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              VerticalAlignment="Stretch" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuMaterialRightExpanderHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ExpanderAssist.RightHeaderPadding)}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ToggleButton Grid.Row="0"
                                      HorizontalAlignment="Center"
                                      Foreground="{TemplateBinding Foreground}"
                                      IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource MaterialDesignExpanderToggleButton}"
                                      RenderTransformOrigin="0.5,0.5">
                                <ToggleButton.RenderTransform>
                                    <RotateTransform Angle="-90"/>
                                </ToggleButton.RenderTransform>
                            </ToggleButton>
                            <ContentPresenter Grid.Row="1"
                                          HorizontalAlignment="Center"
                                          Margin="0,10,0,0"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          VerticalAlignment="Top" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuMaterialDesignExpander" TargetType="{x:Type Expander}" BasedOn="{StaticResource MaterialDesignExpander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Expanded">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="
">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0" To="Collapsed">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <DockPanel Background="{TemplateBinding Background}">
                            <ToggleButton Name="HeaderSite"
                                          Focusable="False"
                                          IsTabStop="False"
                                          DockPanel.Dock="Top"
                                          BorderThickness="0" Cursor="Hand"
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource MaterialDesignExpanderDownHeaderStyle}"
                                          TextElement.FontSize="15"
                                          Opacity=".87"
                                          Foreground="{TemplateBinding Foreground}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"/>
                            <Border Name="ContentSite">
                                <Grid Name="ContentPanel"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentPresenter Name="PART_Content" Focusable="False" Opacity="0"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                </Grid>
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="LayoutTransform" TargetName="ContentPanel">
                                <Setter.Value>
                                    <ScaleTransform CenterX="0" CenterY="0.5" 
                                                            ScaleX="{Binding Opacity, ElementName=PART_Content}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Height" TargetName="ContentPanel" Value="Auto"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource MenuMaterialLeftExpanderHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="LayoutTransform" TargetName="ContentPanel">
                                <Setter.Value>
                                    <ScaleTransform CenterX="1" CenterY="0.5" 
                                                    ScaleX="{Binding Opacity, ElementName=PART_Content}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Height" TargetName="ContentPanel" Value="Auto"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource MenuMaterialRightExpanderHeaderStyle}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <DataTemplate x:Key="PortConfigurationPopupBody" DataType="viewModel:ArduinoConfigPortViewModel">
        <StackPanel>
            <ItemsControl ItemsSource="{Binding AvailableDevices}" Margin="0,10,0,0">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Command="{Binding DataContext.ConnectCommand, RelativeSource={RelativeSource AncestorType=materialDesign:PopupBox}}" 
                                CommandParameter="{Binding Name}"
                                ToolTip="Connect">
                            <Grid VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="150" />
                                </Grid.ColumnDefinitions>

                                <materialDesign:PackIcon Kind="PowerPlug" Width="30" Height="30" HorizontalAlignment="Center" VerticalAlignment="Center" />

                                <StackPanel Grid.Column="1" Margin="0,10,0,0">
                                    <TextBlock Opacity="0.8" FontSize="18" Text="{Binding Name}"  TextWrapping="Wrap" />
                                    <TextBlock Opacity="0.4" FontSize="10" Text="{Binding Description}" TextWrapping="Wrap" />
                                </StackPanel>
                            </Grid>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Separator />
            <Button Command="{Binding DisableCommand}"
                    Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                    ToolTip="Mute">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition Width="150" />
                    </Grid.ColumnDefinitions>

                    <materialDesign:PackIcon Kind="EarHearingOff" Width="30" Height="30" HorizontalAlignment="Center" VerticalAlignment="Center" />

                    <StackPanel Grid.Column="1" Margin="0,10,0,0">
                        <TextBlock Opacity="0.6" FontSize="18" Text="Disable"  TextWrapping="Wrap" />
                        <TextBlock Opacity="0.4" FontSize="10" Text="Channel binding are kept but triggers will not fire up" TextWrapping="Wrap" />
                    </StackPanel>
                </Grid>
            </Button>
            <Button Command="{Binding DisableCommand}"
                    Visibility="{Binding IsEnabled, Converter={StaticResource InverseBoolToVisConverter}}"
                    ToolTip="Mute">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition Width="150" />
                    </Grid.ColumnDefinitions>

                    <materialDesign:PackIcon Kind="EarHearing" Width="30" Height="30" HorizontalAlignment="Center" VerticalAlignment="Center" />

                    <StackPanel Grid.Column="1" Margin="0,10,0,0">
                        <TextBlock Opacity="0.6" FontSize="18" Text="Enable" TextWrapping="Wrap" />
                        <TextBlock Opacity="0.4" FontSize="10" Text="Triggers will fire up again" TextWrapping="Wrap" />
                    </StackPanel>
                </Grid>
            </Button>
            <Button Command="{Binding ConnectCommand}"
                    Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}"
                    VerticalAlignment="Center" VerticalContentAlignment="Center"
                    ToolTip="Disconnect">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition Width="150" />
                    </Grid.ColumnDefinitions>

                    <materialDesign:PackIcon Kind="PowerPlugOff" Width="30" Height="30" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <materialDesign:PackIcon.Foreground>
                            <SolidColorBrush Color="{DynamicResource RedAccent100}"></SolidColorBrush>
                        </materialDesign:PackIcon.Foreground>
                    </materialDesign:PackIcon>

                    <StackPanel Grid.Column="1">
                        <TextBlock Opacity="0.6" FontSize="18" Text="Disconnect" VerticalAlignment="Center" TextWrapping="Wrap" >
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{DynamicResource RedAccent100}"></SolidColorBrush>
                            </TextBlock.Foreground>
                        </TextBlock>
                        <TextBlock Opacity="0.4"  FontSize="10" Text="Channel binding will be lost" VerticalAlignment="Center" TextWrapping="Wrap" >
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{DynamicResource RedAccent100}"></SolidColorBrush>
                            </TextBlock.Foreground>
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </Button>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="PortConfigurationItemTemplate" DataType="viewModel:ArduinoConfigPortViewModel">
        <materialDesign:Card HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                             materialDesign:ShadowAssist.ShadowDepth="Depth1" 
                             Padding="1" Margin="5">
            <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="120" />
                    </Grid.ColumnDefinitions>

                    <materialDesign:PopupBox PlacementMode="LeftAndAlignTopEdges" 
                                         PopupContent="{Binding}"
                                         PopupContentTemplate="{StaticResource PortConfigurationPopupBody}" />

                    <Border BorderBrush="{StaticResource MaterialDesignLightSeparatorBackground}" 
                        Grid.Column="1" 
                        BorderThickness="2,0,0,0" Padding="5">
                        <StackPanel Margin="5">
                            <materialDesign:PackIcon Kind="PlugSocketEu" Width="30" Height="30" HorizontalAlignment="Center">
                                <materialDesign:PackIcon.Style>
                                    <Style TargetType="materialDesign:PackIcon">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                                <Setter Property="Foreground">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{DynamicResource GreenAccent200}"></SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsConnected}" Value="False">
                                                <Setter Property="Foreground">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{DynamicResource RedAccent200}"></SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                                <Setter Property="Foreground">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{DynamicResource GrayNormal}"></SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </materialDesign:PackIcon.Style>
                            </materialDesign:PackIcon>
                            <TextBlock Opacity="0.5" Text="{Binding PortName}" TextWrapping="Wrap" TextAlignment="Center" HorizontalAlignment="Center" />
                            <TextBlock Opacity="0.2" Text="{Binding ConnectedDeviceName}" TextWrapping="Wrap" TextAlignment="Center" HorizontalAlignment="Center" />
                           
                            <Separator Margin="10,20,10,20" />
                            
                            <ItemsControl ItemsSource="{Binding AvailableInputs}"
                                          ItemTemplate="{StaticResource InputDescriptionTemplate}">
                            </ItemsControl>
                        </StackPanel>
                    </Border>
                </Grid>
        </materialDesign:Card>
    </DataTemplate>

    <DataTemplate x:Key="PortConfigurationDrawerItemTemplate" DataType="viewModel:ArduinoConfigPortViewModel">
        <materialDesign:Card HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                             materialDesign:ShadowAssist.ShadowDepth="Depth1" 
                             Padding="1" Margin="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border BorderBrush="{StaticResource MaterialDesignLightSeparatorBackground}" BorderThickness="0,0,2,0" Padding="5">
                    <StackPanel Margin="5">
                        <materialDesign:PackIcon Kind="PlugSocketEu" Width="30" Height="30" HorizontalAlignment="Center">
                            <materialDesign:PackIcon.Style>
                                <Style TargetType="materialDesign:PackIcon">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                            <Setter Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource GreenAccent200}"></SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsConnected}" Value="False">
                                            <Setter Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource RedAccent200}"></SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                            <Setter Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource GrayNormal}"></SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </materialDesign:PackIcon.Style>
                        </materialDesign:PackIcon>
                        <TextBlock Opacity="0.5" Text="{Binding PortName}" TextWrapping="Wrap" TextAlignment="Center" HorizontalAlignment="Center" />
                        <TextBlock Opacity="0.2" Text="{Binding ConnectedDeviceName}" TextWrapping="Wrap" TextAlignment="Center" HorizontalAlignment="Center" />
                    </StackPanel>
                </Border>

                <materialDesign:PopupBox Grid.Column="1" PlacementMode="TopAndAlignLeftEdges" 
                                         PopupContentTemplate="{StaticResource PortConfigurationPopupBody}" 
                                         PopupContent="{Binding}" />
            </Grid>
        </materialDesign:Card>
    </DataTemplate>

    <Style x:Key="PortConfigurationDrawerListTemplate" TargetType="ItemsControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate" Value="{StaticResource PortConfigurationDrawerItemTemplate}" />
    </Style>

    <DataTemplate x:Key="PortConfigurationListTemplate" DataType="viewModel:MainViewModel">
        <Border BorderBrush="{StaticResource MaterialDesignLightSeparatorBackground}" BorderThickness="2,0,0,0" Padding="5">
            <ItemsControl ItemsSource="{Binding HardwareConfig.ArduinoPorts}" ItemTemplate="{StaticResource PortConfigurationItemTemplate}" />
        </Border>
    </DataTemplate>

    <Style x:Key="ArduinoPortExpander" TargetType="Expander" BasedOn="{StaticResource MenuMaterialDesignExpander}">
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="ExpandDirection" Value="Left" />
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="Header">
            <Setter.Value>
                <StackPanel>
                    <TextBlock Text="Port Configuration" RenderTransformOrigin=".5,.5">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </StackPanel>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate" Value="{StaticResource PortConfigurationListTemplate}" />
    </Style>

</ResourceDictionary>