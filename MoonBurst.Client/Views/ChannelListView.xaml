<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:viewModel="clr-namespace:MoonBurst.ViewModel">

    <Style  x:Key="ChannelExpanderHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ExpanderAssist.RightHeaderPadding)}" BorderThickness="3,0,0,0">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                        <Setter Property="BorderBrush">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{StaticResource GreenAccent200}"></SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                        <Setter Property="BorderBrush">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{StaticResource RedAccent100}"></SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ToggleButton Grid.Row="0"
                                                          HorizontalAlignment="Center"
                                                          Foreground="{TemplateBinding Foreground}"
                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                          Style="{StaticResource MaterialDesignExpanderToggleButton}"
                                                          RenderTransformOrigin="0.5,0.5">
                                <ToggleButton.RenderTransform>
                                    <RotateTransform Angle="-90"/>
                                </ToggleButton.RenderTransform>
                            </ToggleButton>
                            <ContentPresenter Grid.Row="1"
                                                              HorizontalAlignment="Center"
                                                              Margin="0,16,0,0"
                                                              Content="{TemplateBinding Content}"
                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                              VerticalAlignment="Stretch" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChannelExpanderStyle" TargetType="{x:Type Expander}" BasedOn="{StaticResource MaterialDesignExpander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Expanded">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0" To="Collapsed">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <DockPanel Background="{TemplateBinding Background}">
                            <ToggleButton Name="HeaderSite"
                                          Focusable="False"
                                          IsTabStop="False"
                                          DockPanel.Dock="Top"
                                          BorderThickness="0" Cursor="Hand"
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource MaterialDesignExpanderDownHeaderStyle}"
                                          TextElement.FontSize="15"
                                          Opacity=".87"
                                          Foreground="{TemplateBinding Foreground}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"/>
                            <Border Name="ContentSite">
                                <Grid Name="ContentPanel"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentPresenter Name="PART_Content" Focusable="False" Opacity="0"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                </Grid>
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="LayoutTransform" TargetName="ContentPanel">
                                <Setter.Value>
                                    <ScaleTransform CenterX="1" CenterY="0.5" ScaleX="{Binding Opacity, ElementName=PART_Content}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Height" TargetName="ContentPanel" Value="Auto"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ChannelExpanderHeaderStyle}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ChannelHeaderActionStatusTemplate" DataType="viewModel:FunctoidActionViewModel">
        <Grid>
            <Ellipse Style="{StaticResource TriggerStatusEllipseControl}" VerticalAlignment="Center" HorizontalAlignment="Center">
            </Ellipse>
            <Button ToolTip="{Binding ActionName}">
                <materialDesign:PackIcon Kind="PlayOutline" Margin="5" />
                <Button.InputBindings>
                    <MouseBinding Gesture="RightClick" Command="{Binding OnToggleActionCommand}" />
                    <MouseBinding Gesture="LeftClick" Command="{Binding OnTriggerActionCommand}" />
                </Button.InputBindings>
                <Button.Style>
                    <Style TargetType="{x:Type Button}"  BasedOn="{StaticResource MaterialDesignIconForegroundButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEnabled}" Value="True" >
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource GreenAccent200}"></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource RedAccent100}"></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="ChannelExpanderHeaderTemplate" DataType="viewModel:FunctoidChannelViewModel">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <StackPanel>
                <Separator />

                <Grid>

                    <Ellipse Style="{StaticResource TriggerStatusEllipseControl}" VerticalAlignment="Center" HorizontalAlignment="Center">
                    </Ellipse>


                    <Button ToolTip="{Binding Name}">
                        <materialDesign:PackIcon Kind="Function" Margin="5" />
                        <Button.InputBindings>
                            <MouseBinding Gesture="LeftClick" Command="{Binding OnToggleCommand}" />
                        </Button.InputBindings>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}"  BasedOn="{StaticResource MaterialDesignIconForegroundButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEnabled}" Value="True" >
                                        <Setter Property="Foreground">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{DynamicResource GreenAccent200}"></SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                        <Setter Property="Foreground">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{DynamicResource RedAccent100}"></SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>

                <Separator />

                <TextBlock MinWidth="100" FontSize="13"
                               Text="{Binding Name}" 
                               HorizontalAlignment="Center"
                               Margin="10 10 10 10"
                               RenderTransformOrigin=".5,.5">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="90" />
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </StackPanel>

            <StackPanel Grid.Row="1">
                <Separator />
                <ItemsControl Margin="0,10,0,0" ItemsSource="{Binding Actions}" ItemTemplate="{StaticResource ChannelHeaderActionStatusTemplate}" />
            </StackPanel>

            <TextBlock Grid.Row="2"></TextBlock>

            <StackPanel Grid.Row="3">
                <Separator />
                <TextBlock Text="{Binding Path=Index}"
                               Margin="10 10 10 10" 
                               HorizontalAlignment="Center"
                               materialDesign:ShadowAssist.ShadowDepth="Depth1">
                </TextBlock>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ChannelExpanderBodyTemplate" DataType="viewModel:FunctoidChannelViewModel">
        <Border BorderBrush="{StaticResource MaterialDesignLightSeparatorBackground}" BorderThickness="2,0,0,0">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0">
                    <TextBox 
                        
                                materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                materialDesign:HintAssist.FloatingScale="0.50"
                                Text="{Binding Name}"
                                FontWeight="Light"
                                Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                FontSize="60" />
                </StackPanel>


                <ComboBox materialDesign:HintAssist.Hint="Available Inputs..."
                          ToolTip="Selected Input" Grid.Row="1"
                          ItemsSource="{Binding AvailableInputs}"
                          SelectedItem="{Binding SelectedInput}"
                          ItemTemplate="{StaticResource InputDescriptionComboboxTemplate}">
                </ComboBox>

                <ItemsControl Style="{StaticResource ActionListItemControl}" Grid.Row="2" Margin="0,5,0,0" ItemsSource="{Binding Actions}" />

                <Grid Grid.Row="3" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button Style="{StaticResource MaterialDesignIconButton}" 
                                Width="20" Height="20" materialDesign:RippleAssist.IsCentered="True" 
                                Foreground="{StaticResource MahApps.Brushes.Button.Flat.Background}"
                                ToolTip="Add trigger"
                                Command="{Binding OnAddActionCommand}">
                            <materialDesign:PackIcon Kind="Add" Width="15" Height="15" />
                        </Button>

                        <Button Style="{StaticResource MaterialDesignIconButton}" 
                                Width="20" Height="20" materialDesign:RippleAssist.IsCentered="True"
                                Foreground="{StaticResource MahApps.Brushes.Button.Flat.Background}"
                                ToolTip="Trigger functoid"
                                Command="{Binding OnTriggerCommand}">
                            <materialDesign:PackIcon Kind="Fire" Width="15" Height="15" />
                        </Button>

                        <Button Style="{StaticResource MaterialDesignIconButton}" 
                                Width="20" Height="20" materialDesign:RippleAssist.IsCentered="True"
                                Foreground="{StaticResource MahApps.Brushes.Button.Flat.Background}"
                                ToolTip="Expand all trigger"
                                Command="{Binding OnExpandActionsCommand}">
                            <materialDesign:PackIcon Kind="ArrowExpandHorizontal" Width="15" Height="15" />
                        </Button>
                        <Button Style="{StaticResource MaterialDesignIconButton}" 
                                Width="20" Height="20" materialDesign:RippleAssist.IsCentered="True" 
                                Foreground="{StaticResource MahApps.Brushes.Button.Flat.Background}"
                                ToolTip="Collapse all trigger"
                                Command="{Binding OnCollapseActionsCommand}">
                            <materialDesign:PackIcon Kind="ArrowCollapseHorizontal" Width="15" Height="15" />
                        </Button>

                        <Button Style="{StaticResource MaterialDesignIconButton}" 
                                Width="20" Height="20" materialDesign:RippleAssist.IsCentered="True"
                                Foreground="{StaticResource MahApps.Brushes.Button.Flat.Background}"
                                ToolTip="Delete functoid"
                                Command="{Binding OnDeleteCommand}">
                            <materialDesign:PackIcon Kind="Delete" Width="15" Height="15" />
                        </Button>
                    </StackPanel>
                </Grid>

            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ChannelListViewItemTemplate" DataType="viewModel:FunctoidChannelViewModel">
        <materialDesign:Card  HorizontalAlignment="Left" 
                              Width="300"
                              VerticalAlignment="Stretch">
            <Expander ExpandDirection="Right" 
                          IsExpanded="{Binding IsExpanded}" 
                          VerticalContentAlignment="Stretch"
                          Style="{StaticResource ChannelExpanderStyle}" 
                          Header="{Binding}" Content="{Binding}"
                          ContentTemplate="{StaticResource ChannelExpanderBodyTemplate}"
                          HeaderTemplate="{StaticResource ChannelExpanderHeaderTemplate}"
                          materialDesign:ExpanderAssist.RightHeaderPadding="5 20 5 20">
            </Expander>
        </materialDesign:Card>
    </DataTemplate>

    <ControlTemplate x:Key="ChannelListViewTemplate">
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" CanContentScroll="False">
            <ItemsPresenter/>
        </ScrollViewer>
    </ControlTemplate>

    <ItemsPanelTemplate x:Key="ChannelListViewPanelTemplate">
        <StackPanel Orientation="Horizontal" />
    </ItemsPanelTemplate>

    <Style TargetType="ListView" x:Key="ChannelListView">
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template" Value="{StaticResource ChannelListViewTemplate}" />
        <Setter Property="ItemTemplate" Value="{StaticResource ChannelListViewItemTemplate}" />
        <Setter Property="ItemsPanel" Value="{StaticResource ChannelListViewPanelTemplate}" />
    </Style>
</ResourceDictionary>