 <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MoonBurst.Views"
                    xmlns:moonBurst="clr-namespace:MoonBurst"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <Style x:Key="ActionMaterialExpanderHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="3,0,0,0" 
                                    Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ExpanderAssist.DownHeaderPadding)}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                        <Setter Property="BorderBrush">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{StaticResource RedAccent100}"></SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                        <Setter Property="BorderBrush">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{StaticResource GreenAccent200}"></SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              VerticalAlignment="Stretch"
                                              Margin="0,0,0,0" />
                            <ToggleButton Grid.Column="1"
                                          VerticalAlignment="Center"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource MaterialDesignExpanderToggleButton}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ActionEditorExpander" TargetType="{x:Type Expander}" BasedOn="{StaticResource MaterialDesignExpander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Expanded">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0" To="Collapsed">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <DockPanel Background="{TemplateBinding Background}">
                            <ToggleButton Name="HeaderSite"
                                          Focusable="False"
                                          IsTabStop="False"
                                          DockPanel.Dock="Top"
                                          BorderThickness="0" Cursor="Hand"
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource MaterialDesignExpanderDownHeaderStyle}"
                                          TextElement.FontSize="15"
                                          Opacity=".87"
                                          Foreground="{TemplateBinding Foreground}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"/>
                            <Border Name="ContentSite" BorderThickness="3,0,0,0">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                                <Setter Property="BorderBrush">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{StaticResource RedAccent100}"></SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                                <Setter Property="BorderBrush">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{StaticResource GreenAccent200}"></SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Grid Name="ContentPanel"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentPresenter Name="PART_Content" Focusable="False" Opacity="0"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                </Grid>
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Top"/>
                            <Setter Property="LayoutTransform" TargetName="ContentPanel">
                                <Setter.Value>
                                    <ScaleTransform CenterX="0.5" CenterY="0" 
                                                    ScaleY="{Binding Opacity, ElementName=PART_Content}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" TargetName="ContentPanel" Value="Auto"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ActionMaterialExpanderHeaderStyle}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ActionEditorHeaderItemTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ToggleButton IsChecked="{Binding IsEnabled}" ToolTip="(De)Activate">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignSwitchToggleButton}">
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource GreenAccent200}"></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource RedAccent200}"></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
                <moonBurst:ToggleButtonAssist.SwitchTrackOnBackground>
                    <SolidColorBrush Color="{DynamicResource GreenAccent200}"></SolidColorBrush>
                </moonBurst:ToggleButtonAssist.SwitchTrackOnBackground>
                <moonBurst:ToggleButtonAssist.SwitchTrackOffBackground>
                    <SolidColorBrush Color="{DynamicResource RedAccent200}"></SolidColorBrush>
                </moonBurst:ToggleButtonAssist.SwitchTrackOffBackground>
            </ToggleButton>

            <Label Grid.Column="1" VerticalAlignment="Center" FontSize="11" ToolTip="{Binding ActionName}">
                <TextBlock TextTrimming="CharacterEllipsis" Text="{Binding ActionName}" />
            </Label>
        </Grid>
    </DataTemplate>

     <Style TargetType="mah:NumericUpDown">
        <Setter Property="Minimum" Value="0" />
        <Setter Property="Maximum" Value="0" />
        <Setter Property="TextAlignment" Value="0" />
    </Style>

    <!-- Action Editor Body -->
    <DataTemplate x:Key="ActionEditorBodyItemTemplate">
        <Border Margin="10,0,10,0">
            <StackPanel>
                <StackPanel Margin="0, 10, 0, 0" Width="225">
                    <StackPanel Orientation="Horizontal">
                        <Label Style="{DynamicResource ActionEditorFieldLabel}" 
                                   Content="Trigger" />
                        <ComboBox materialDesign:HintAssist.Hint="Command"
                                      ToolTip="Command" Width="150"
                                      ItemsSource="{Binding Source={StaticResource FootTriggerValues}}"
                                      SelectedItem="{Binding Trigger}">
                        </ComboBox>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label Style="{DynamicResource ActionEditorFieldLabel}" 
                                   Content="Channel" />
                        <mah:NumericUpDown  Width="150"
                                                Minimum="1" 
                                                Maximum="16"
                                                TextAlignment="Left"
                                                HorizontalContentAlignment="Stretch"
                                                materialDesign:HintAssist.Hint="Midi Channel"
                                                ToolTip="Midi Channel"
                                                Value="{Binding MidiChannel}"
                                                Interval="1" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label Style="{DynamicResource ActionEditorFieldLabel}"
                                   Content="Data 1"/>
                        <mah:NumericUpDown  Width="150"
                                                Minimum="1"
                                                Maximum="128"
                                                TextAlignment="Left"
                                                HorizontalContentAlignment="Stretch"
                                                materialDesign:HintAssist.Hint="Data 1"
                                                ToolTip="Data 1"
                                                Value="{Binding Data1}"
                                                Interval="1" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label Style="{DynamicResource ActionEditorFieldLabel}"
                                   Content="Data 2"/>
                        <mah:NumericUpDown  Width="150"
                                                Minimum="1"
                                                Maximum="128"
                                                TextAlignment="Left"
                                                HorizontalContentAlignment="Stretch"
                                                materialDesign:HintAssist.Hint="Data 2"
                                                ToolTip="Data 2"
                                                Value="{Binding Data2}"
                                                Interval="1" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label Style="{DynamicResource ActionEditorFieldLabel}"
                                   Content="Delay(ms)"/>
                        <mah:NumericUpDown  Width="150"
                                                Minimum="0"
                                                Maximum="128"
                                                TextAlignment="Left"
                                                HorizontalContentAlignment="Stretch"
                                                materialDesign:HintAssist.Hint="Data 2"
                                                ToolTip="Data 2"
                                                Value="{Binding Delay}"
                                                Interval="1" />
                    </StackPanel>

                    <ComboBox Margin="0,10,0,0"
                                  materialDesign:HintAssist.Hint="Command"
                                  ToolTip="Command"
                                  ItemsSource="{Binding Source={StaticResource MidiChannelCommandValues}}"
                                  SelectedItem="{Binding Command}">
                    </ComboBox>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 8 0 8" Grid.Column="1">
                            <Button Style="{StaticResource MaterialDesignIconForegroundButton}"
                                    Width="20" Height="20"
                                    materialDesign:RippleAssist.IsCentered="True" 
                                    ToolTip="Manual Trigger"
                                    Command="{Binding OnTriggerActionCommand}">
                                <materialDesign:PackIcon Kind="Fire" Width="15" Height="15" />
                            </Button>
                            <Button Style="{StaticResource MaterialDesignIconForegroundButton}"
                                    ToolTip="Delete"
                                    Width="20" Height="20"
                                    materialDesign:RippleAssist.IsCentered="True" 
                                    Command="{Binding OnDeleteActionCommand}">
                                <materialDesign:PackIcon Kind="Delete" Width="15" Height="15" />
                            </Button>
                        </StackPanel>
                    </Grid>

                </StackPanel>
            </StackPanel>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ActionListItemTemplate">
        <materialDesign:Card  HorizontalAlignment="Stretch" 
                                  materialDesign:ShadowAssist.ShadowDepth="Depth1" 
                                  Padding="1"  Margin="5">
            <Expander IsExpanded="{Binding IsExpanded}" 
                          Content="{Binding}" Header="{Binding}" 
                          HorizontalAlignment="Stretch" Name="exp"
                          materialDesign:ExpanderAssist.DownHeaderPadding="5 5 5 5"
                          Style="{StaticResource ActionEditorExpander}"
                          ContentTemplate="{StaticResource ActionEditorBodyItemTemplate}"
                          HeaderTemplate="{StaticResource ActionEditorHeaderItemTemplate}">
            </Expander>
        </materialDesign:Card>
    </DataTemplate>

    <ControlTemplate x:Key="ActionListTemplate" TargetType="{x:Type ItemsControl}">
        <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto" CanContentScroll="False">
            <ItemsPresenter/>
        </ScrollViewer>
    </ControlTemplate>

    <Style TargetType="ItemsControl" x:Key="ActionListItemControl">
        <Setter Property="Template" Value="{StaticResource ActionListTemplate}" />
        <Setter Property="ItemTemplate" Value="{StaticResource ActionListItemTemplate}" />
    </Style>
</ResourceDictionary>